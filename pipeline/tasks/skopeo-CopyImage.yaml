apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/displayName: my skopeo copy
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: cli
  name: my-skopeo-copy
  labels:
    app.kubernetes.io/version: '0.1'
    operator.tekton.dev/provider-type: redhat
spec:
  description: >-
    Skopeo is a command line tool for working with remote image registries.

    Skopeo doesnâ€™t require a daemon to be running while performing its
    operations. In particular, the handy skopeo command called copy will ease
    the whole image copy operation. The copy command will take care of copying
    the image from internal.registry to production.registry. If your production
    registry requires credentials to login in order to push the image, skopeo
    can handle that as well.
  params:
    - default: ''
      description: URL of the image to be copied to the destination registry
      name: srcImageURL
      type: string
    - default: ''
      description: URL of the image where the image from source should be copied to
      name: destImageURL
      type: string
    - default: 'true'
      description: Verify the TLS on the src registry endpoint
      name: srcTLSverify
      type: string
    - default: 'false'
      description: Verify the TLS on the dest registry endpoint
      name: destTLSverify
      type: string
    - default: 'cytan-pull-secret'
      description: secrets name to push image to quay
      name: quay-secret
      type: string
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: $(params.quay-secret)
  steps:
    - image: >-
        registry.redhat.io/rhel8/skopeo@sha256:16a9e6d89dbc80cf88fece341e63b99239082aabf705cc014c6350a14fb29509
      name: skopeo-copy
      volumeMounts:
        - name: quay-auth-secret
          mountPath: /etc/secret-volume
          readOnly: true
      script: |
        cat /etc/secret-volume/.dockerconfigjson
        skopeo copy "docker://$(params.srcImageURL)" "docker://$(params.destImageURL)" --src-tls-verify=$(params.srcTLSverify) --dest-tls-verify=$(params.destTLSverify) --authfile=/etc/secret-volume/.dockerconfigjson